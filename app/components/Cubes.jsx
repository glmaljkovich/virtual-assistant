/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useEffect, useState } from 'react'
import { useGLTF, PerspectiveCamera, useAnimations } from '@react-three/drei'
import { Select } from "@react-three/postprocessing"

export function Light1(props) {
    return (
        <directionalLight
          name="Light"
          intensity={2075}
          decay={5}
          color="#b218ff"
          position={[8.772, 16.303, -11.698]}
          rotation={[-2.158, 0.359, 1.933]}>
          <group position={[0, 0, -1]} />
        </directionalLight>
    )
}

export function Light2(props) {
    return (
        <spotLight
          name="Spot"
          intensity={157896.295}
          angle={0.331}
          penumbra={0.818}
          decay={5}
          color="#1bff12"
          position={[12, 5, -5]}
          rotation={[-2.23, 1.168, 0.445]}>
          <group position={[0, 0, -1]} />
        </spotLight>
    )
}

export function Camera(props) {
    return (
        <PerspectiveCamera
        name="Camera"
        makeDefault={true}
        far={100.1}
        near={0.1}
        fov={29.839}
        position={[4.636, 3.524, -15.572]}
        rotation={[-40, 0.307, 3.098]}
        scale={3.86}
      />
    )
}

export function Cubes(props) {
  const [hovered, hover] = useState(null)
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/cubes5.glb')
  const { actions } = useAnimations(animations, group)
  useEffect(() => {
    actions?.Scene.play().setEffectiveTimeScale(1.5)
  })
  const over = (name) => (e) => (e.stopPropagation(), hover(name))

  return (
    <group name="Cubes" ref={group} {...props} dispose={null}>
        <Select enabled={hovered === "Cube"} onPointerOver={over("Cube")} onPointerOut={over(null)}>
        <mesh
          name="Cube"
          castShadow
          receiveShadow
          geometry={nodes.Cube.geometry}
          material={materials['Anti-slip plate star 3']}
          position={[-1.634, -0.518, -0.366]}
          rotation={[0.955, Math.PI / 6, -0.615]}
        />
        </Select>

        <Select enabled={hovered === "Cube001"} onPointerOver={over("Cube001")} onPointerOut={over(null)}>
        <mesh
          name="Cube001"
          castShadow
          receiveShadow
          geometry={nodes.Cube001.geometry}
          material={materials['Anti-slip plate star 3']}
          position={[-0.384, 1.25, 0.884]}
          rotation={[0.955, Math.PI / 6, -0.615]}
        />
        </Select>
        <Select enabled={hovered === "Cube002"} onPointerOver={over("Cube002")} onPointerOut={over(null)}>
        <mesh
          name="Cube002"
          castShadow
          receiveShadow
          geometry={nodes.Cube002.geometry}
          material={materials['Anti-slip plate star 3']}
          position={[-2.884, 1.25, -1.616]}
          rotation={[0.955, Math.PI / 6, -0.615]}
        />
        </Select>
        <mesh
          name="Cube003"
          castShadow
          receiveShadow
          geometry={nodes.Cube003.geometry}
          material={materials['Anti-slip plate star 3']}
          position={[-1.634, 3.018, -0.366]}
          rotation={[0.955, Math.PI / 6, -0.615]}
        />
        <mesh
          name="Cube004"
          castShadow
          receiveShadow
          geometry={nodes.Cube004.geometry}
          material={materials['Anti-slip plate star 3']}
          position={[-1.116, 1.25, -3.384]}
          rotation={[0.955, Math.PI / 6, -0.615]}
        />
        <mesh
          name="Cube005"
          castShadow
          receiveShadow
          geometry={nodes.Cube005.geometry}
          material={materials['Anti-slip plate star 3']}
          position={[0.134, 3.018, -2.134]}
          rotation={[0.955, Math.PI / 6, -0.615]}
        />
        <mesh
          name="Cube006"
          castShadow
          receiveShadow
          geometry={nodes.Cube006.geometry}
          material={materials['Anti-slip plate star 3']}
          position={[0.134, -0.518, -2.134]}
          rotation={[0.955, Math.PI / 6, -0.615]}
        />
        <mesh
          name="Cube007"
          castShadow
          receiveShadow
          geometry={nodes.Cube007.geometry}
          material={materials['Anti-slip plate star 3']}
          position={[1.384, 1.25, -0.884]}
          rotation={[0.955, Math.PI / 6, -0.615]}
        />
    </group>
  )
}